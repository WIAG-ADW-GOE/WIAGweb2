security:
    role_hierarchy:
      ROLE_ADMIN: [ROLE_CANON_ONEPAGE, ROLE_EDIT, ROLE_EDIT_USER, ROLE_ALLOWED_TO_SWITCH]
      ROLE_EDIT: [ROLE_EDIT_MENU]
      ROLE_EDIT_USER: [ROLE_EDIT_MENU]

    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\UserWiag:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider

    hide_user_not_found: false

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\UserWiag
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginFormAuthenticator
            # entry_point: App\Security\LoginFormAuthenticator
            # we use custom LoginFormAuthenticater but Symfony's form_login once in use can not be removed
            form_login:
              login_path: login
              check_path: login
              username_parameter: email
              password_parameter: password
              enable_csrf: true
              # use explicit target to force HTTPS
              default_target_path: "https://${env:HTTP_HOST}"
            entry_point: form_login
            logout:
              # use explicit target to force HTTPS
              target: "https://${env:HTTP_HOST}"
            remember_me:
              secret: '%kernel.secret%'
              signature_properties: [password]
              # 2022-06-24 set this option if there is no checkbox _remember_me in the login form
              # always_remember_me: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/edit, roles: ROLE_EDIT }
